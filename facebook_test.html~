<!DOCTYPE html>
<html>
<head>
<title>Facebook Login JavaScript Example</title>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<meta charset="UTF-8">
</head>
<body>
<script>
  var id = -1;
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      FB.api('/me', function(response) {
        console.log(JSON.stringify(response));
        id = response["id"];
        document.getElementById('status').innerHTML = 
          'Thanks for logging in, ' + response.name + '!';
      });
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '960379903977296',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.1' // use version 2.1
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.

  function submit() {

      $.ajax({
        type: 'POST',
        data: "location=" + document.getElementById("location").value
          + "&userid=" + id,
        url: "http://bounce.grantadd.is/updatedb.php",
        success: function(data) {
          console.log(data);
          alert('database successfully added');
        },
        error: function(){
          console.log(data);
          alert('There was an error adding the data');
        }
      });

    return false;
  };

  function retrieve() {
  
    /* $.ajax({
      type: "GET",
      url: "http://bounce.grantadd.is/polldb.php",
      data: {"userid": id },
      dataType: "json",
      processData: false
    }).done(function(data) {
        document.getElementById("location_display").value = 
          data["location"];
    }).fail(function(jqXHR, textStatus) {
      alert("Request failed: " + textStatus);
    }); */

    $.get("http://bounce.grantadd.is/polldb.php", {userid: id},
      function(result) {
        document.getElementById("location_display").value = result.location;
      });
  }
    

</script>
<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>

<div id="status">
</div>

<input id="location"></input><br>
<button id="submit" onclick="submit()">Check In</button><br>
<div id="location_display"></div>
<button id="where" onclick="retrieve()">Where am I?</button>

<script>
</script>

</body>
</html>
